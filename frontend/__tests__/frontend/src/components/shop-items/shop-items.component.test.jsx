// ********RoostGPT********
// Test generated by RoostGPT for test cart-react using AI Type Open AI and AI Model gpt-4-turbo-2024-04-09



// ********RoostGPT********
import React from 'react';
import { Provider } from 'react-redux';
import { render, cleanup } from '@testing-library/react';
import ShopItem from '../../../../../frontend/src/components/shop-items/shop-items.component';
import configureStore from 'redux-mock-store';
import { initialState } from '../../../../../path/to/initialState'; // Adjust according to actual location and content of initialState

describe('ShopItem Component', () => {
  const mockStore = configureStore();
  let store;

  beforeEach(() => {
    store = mockStore(initialState);
    store.dispatch = jest.fn();
  });

  afterEach(cleanup);

  test('renders without crash', () => {
    const { asFragment } = render(
      <Provider store={store}>
        <ShopItem />
      </Provider>
    );
    expect(asFragment()).toMatchSnapshot();
  });

  test('renders no products', () => {
    initialState.products.product[0].items = [];
    const { getByText } = render(
      <Provider store={store}>
        <ShopItem />
      </Provider>
    );
    expect(getByText("No products available")).toBeInTheDocument();
  });

  test('renders correct number of ShopItemCards', () => {
    initialState.products.product[0].items = [{_id: '1'}, {_id: '2'}]; // Assuming items structure
    const { getAllByTestId } = render(
      <Provider store={store}>
        <ShopItem />
      </Provider>
    );
    expect(getAllByTestId('shop-item-card').length).toEqual(2);
  });
});

