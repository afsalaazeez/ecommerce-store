// ********RoostGPT********
// Test generated by RoostGPT for test cart-react using AI Type Open AI and AI Model gpt-4-turbo-2024-04-09



// ********RoostGPT********
import React from 'react';
import { render, fireEvent } from '@testing-library/react';
import DirectoryComponent from '../../../../../frontend/src/components/directory/DirectoryComponent';

describe('DirectoryComponent Tests', () => {
    it('should correctly render all section items', () => {
        const { getByTestId } = render(<DirectoryComponent />);
        const sections = DirectoryComponent.defaultProps.sections;
        sections.forEach(section => {
            expect(getByTestId(`section-item-${section.id}`)).toHaveTextContent(section.title);
        });
    });

    it('should handle click on a section item correctly', () => {
        const mockFunction = jest.fn();
        const { getByTestId } = render(<DirectoryComponent onSectionClick={mockFunction} />);
        const firstSection = DirectoryComponent.defaultProps.sections[0];
        const sectionElement = getByTestId(`section-item-${firstSection.id}`);
        fireEvent.click(sectionElement);
        expect(mockFunction).toHaveBeenCalledWith(firstSection.linkUrl);
    });

    it('renders a default message when there are no sections', () => {
        jest.mock('../../../../../frontend/src/components/directory/directory-data', () => ({
            default: []
        }));
        const { getByText } = render(<DirectoryComponent />);
        expect(getByText('No sections available')).toBeInTheDocument();
    });

    afterEach(() => {
        jest.resetAllMocks();
    });
});

