// ********RoostGPT********
// Test generated by RoostGPT for test cart-react using AI Type Open AI and AI Model gpt-4-turbo-2024-04-09



// ********RoostGPT********
import React from 'react';
import { render, cleanup, fireEvent } from '@testing-library/react';
import '@testing-library/jest-dom/extend-expect';
import StripeButton from '../../../../../../frontend/src/components/stripe-button/stripe-button.component'; // Relative path from __tests__ directory

describe('StripeButton Component', () => {
    afterEach(cleanup);

    // Check if the StripeButton renders correctly with default props
    test('renders correctly with default props', () => {
        const { getByTestId } = render(<StripeButton />);
        const stripeButton = getByTestId('stripe-button');
        expect(stripeButton).toBeInTheDocument();
    });

    // Check if clicking the button calls the payment processing function
    test('calls payment processing function on button click', () => {
        const mockPaymentFunction = jest.fn();
        const { getByTestId } = render(<StripeButton handlePayment={mockPaymentFunction} />);
        const stripeButton = getByTestId('stripe-button');
        fireEvent.click(stripeButton);
        expect(mockPaymentFunction).toHaveBeenCalled();
    });

    // Test handling of payment processing errors
    test('displays error message on payment failure', () => {
        const errorMessage = 'Payment failed';
        jest.mock('../../../../utils/paymentProcessing', () => ({
            processPayment: () => {
                throw new Error(errorMessage);
            }
        }));
        const { getByTestId, getByText } = render(<StripeButton />);
        const stripeButton = getByTestId('stripe-button');
        fireEvent.click(stripeButton);
        expect(getByText(errorMessage)).toBeInTheDocument();
    });

    // Ensure component unmounts properly without memory leaks
    test('unmounts without crashing', () => {
        const { unmount } = render(<StripeButton />);
        unmount();
    });
});

