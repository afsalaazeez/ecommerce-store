// ********RoostGPT********
// Test generated by RoostGPT for test react-approostio-github using AI Type Open AI and AI Model gpt-4-turbo-2024-04-09



// ********RoostGPT********
// Import necessary libraries and components
import React from 'react';
import { shallow, mount } from 'enzyme';
import { Provider } from 'react-redux';
import configureStore from 'redux-mock-store';
import toJson from 'enzyme-to-json';
import CartIcon from '../../../../../frontend/src/components/cart-icon/cart-icon.component';

// jest configuration in jest.config.js or package.json
/*
 * {
 *   "testEnvironment": "jest-environment-jsdom"
 * }
 */

// To ensure jest-environment-jsdom is installed use:
// npm install --save-dev jest-environment-jsdom

// Configure mock store
const mockStore = configureStore([]);
const store = mockStore({
  cart: { cartItems: [] }
});

describe('CartIcon Component', () => {
  let wrapper, props;

  beforeEach(() => {
    props = {
      toggleCartHidden: jest.fn()
    };
    wrapper = mount( // Mount for full DOM rendering, considering Provider and connect()
      <Provider store={store}>
        <CartIcon {...props} />
      </Provider>
    );
  });

  test('should render CartIcon component correctly', () => {
    expect(toJson(wrapper)).toMatchSnapshot();
  });

  test('should simulate cart icon click', () => {
    wrapper.find('button.cart-icon').simulate('click'); // Assuming 'button' as a container element
    expect(props.toggleCartHidden).toHaveBeenCalled();
  });

  test('should display correct item count from Redux', () => {
    // finding inside the connected component
    const itemCount = wrapper.find('CartIcon').find('.item-count');
    expect(itemCount.text()).toBe('0');
  });
});

