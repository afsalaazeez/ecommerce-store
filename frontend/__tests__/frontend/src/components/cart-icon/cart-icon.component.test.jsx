// ********RoostGPT********
// Test generated by RoostGPT for test cart-react using AI Type Open AI and AI Model gpt-4-turbo-2024-04-09



// ********RoostGPT********
// Import dependencies
import React from 'react';
import { mount } from 'enzyme';
import configureStore from 'redux-mock-store';
import { Provider } from 'react-redux';
import CartIcon from '../../../../../../frontend/src/components/cart-icon/cart-icon.component';

// Mock store setup for testing
const initialState = { cart: { cartItems: [] } };
const mockStore = configureStore();
let store;

// Mock Redux selectors and dispatch functions
jest.mock('../../../../../../frontend/src/redux/cart/cart.selectors', () => ({
  selectCartItemsCount: jest.fn().mockReturnValue(5)
}));

describe('CartIcon Component Tests', () => {
  let wrapper;
  const mockToggleCartHidden = jest.fn();

  beforeEach(() => {
    store = mockStore(initialState);
    const mockProps = {
      toggleCartHidden: mockToggleCartHidden,
      cartItemsCount: 5
    };

    wrapper = mount(
      <Provider store={store}>
        <CartIcon {...mockProps} />
      </Provider>
    );
  });

  it('should render CartIcon component', () => {
    expect(wrapper.find(CartIcon).length).toEqual(1);
  });

  it('should call toggleCartHidden when icon is clicked', () => {
    wrapper.find('svg').simulate('click');
    expect(mockToggleCartHidden).toHaveBeenCalled();
  });

  it('should display the itemCount as the cartItemsCount prop', () => {
    expect(wrapper.find('.item-count').text()).toEqual('5');
  });
});

